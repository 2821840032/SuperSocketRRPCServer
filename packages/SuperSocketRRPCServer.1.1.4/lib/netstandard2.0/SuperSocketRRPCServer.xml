<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SuperSocketRRPCServer</name>
    </assembly>
    <members>
        <member name="T:SuperSocketRRPCServer.CommunicationEntity.RequestBaseInfo">
            <summary>
            最底层传输对象
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.CommunicationEntity.RequestBaseInfo.Key">
            <summary>
            键
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.CommunicationEntity.RequestBaseInfo.body">
            <summary>
            流对象
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.CommunicationEntity.RequestBaseInfo.#ctor(System.String,System.Byte[])">
            <summary>
            最底层传输对象
            </summary>
            <param name="key"></param>
            <param name="body"></param>
        </member>
        <member name="P:SuperSocketRRPCServer.CommunicationEntity.RequestBaseInfo.bodyMeg">
            <summary>
            Utf-8格转换
            </summary>
        </member>
        <member name="T:SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation">
            <summary>
            请求信息
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation.ID">
            <summary>
            本次请求的ID
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation.AssemblyFullName">
            <summary>
            Assembly 标识
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation.FullName">
            <summary>
            FullName名称
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation.MethodName">
            <summary>
            方法名称
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation.Arguments">
            <summary>
            参数列表
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation.ReturnValue">
            <summary>
            RPC调用结果 json
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation.RRPCSessionID">
            <summary>
            强制指定由谁来负责接收调用
            </summary>
        </member>
        <member name="T:SuperSocketRRPCServer.Entity.BaseProvideServices">
            <summary>
            提供服务的基础类 如果你需要用到其中的信息的话
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.BaseProvideServices.Socket">
            <summary>
            操作连接对象
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.BaseProvideServices.Info">
            <summary>
            本次任务的信息
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.BaseProvideServices.RequestInfo">
            <summary>
            最基础的请求信息
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.BaseProvideServices.Container">
            <summary>
            容器对象
            </summary>
        </member>
        <member name="T:SuperSocketRRPCServer.Entity.ReceiveMessageState">
            <summary>
            接收信息的状态
            </summary>
        </member>
        <member name="F:SuperSocketRRPCServer.Entity.ReceiveMessageState.Wait">
            <summary>
            等待中
            </summary>
        </member>
        <member name="F:SuperSocketRRPCServer.Entity.ReceiveMessageState.Success">
            <summary>
            成功
            </summary>
        </member>
        <member name="F:SuperSocketRRPCServer.Entity.ReceiveMessageState.Overtime">
            <summary>
            超时
            </summary>
        </member>
        <member name="F:SuperSocketRRPCServer.Entity.ReceiveMessageState.Error">
            <summary>
            异常
            </summary>
        </member>
        <member name="F:SuperSocketRRPCServer.Entity.ReceiveMessageState.Other">
            <summary>
            其他
            </summary>
        </member>
        <member name="T:SuperSocketRRPCServer.Entity.RemoteCallEntrity">
            <summary>
            任务存储的信息
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.RemoteCallEntrity.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.RemoteCallEntrity.State">
            <summary>
            任务状态
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.RemoteCallEntrity.ExpirationTime">
            <summary>
            过期时间
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.RemoteCallEntrity.ReturnValue">
            <summary>
            远程任务处理结果
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.RemoteCallEntrity.TaskInfo">
            <summary>
            任务信息
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.RemoteCallEntrity.ClientSocket">
            <summary>
            通讯对象
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.RemoteCallEntrity.RetryCount">
            <summary>
            重试次数
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.Entity.RemoteCallEntrity.WaitHandle">
            <summary>
            通知执行委托
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.Entity.RemoteCallEntrity.#ctor(System.Guid,SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation,SuperSocketRRPCServer.Entity.ReceiveMessageState,System.DateTime,SuperSocketRRPCServer.RRPCSession)">
            <summary>
            任务存储
            </summary>
            <param name="id">任务ID</param>
            <param name="taskInfo">任务信息</param>
            <param name="state">状态</param>
            <param name="expirationTime">过期时间</param>
            <param name="socket">连接对象</param>
        </member>
        <member name="M:SuperSocketRRPCServer.Entity.RemoteCallEntrity.ProcessingFuncInvoke(System.String)">
            <summary>
            修改结果并执行委托函数
            </summary>
            <param name="rpcResult"></param>
        </member>
        <member name="M:SuperSocketRRPCServer.Entity.RemoteCallEntrity.ProcessingFuncInvoke(SuperSocketRRPCServer.Entity.ReceiveMessageState,System.String)">
            <summary>
            修改结果并执行委托函数
            </summary>
            <param name="state">状态</param>
            <param name="rpcResult">结果</param>
        </member>
        <member name="T:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity">
            <summary>
            请求转发任务存储的信息
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity.State">
            <summary>
            任务状态
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity.ExpirationTime">
            <summary>
            清理时间
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity.ReturnValue">
            <summary>
            远程任务处理结果
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity.TaskInfo">
            <summary>
            任务信息
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity.RequestClient">
            <summary>
            请求对象
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity.GiveClient">
            <summary>
            转发对象
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity.RetryCount">
            <summary>
            重试次数
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity.#ctor(System.Guid,SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation,SuperSocketRRPCServer.Entity.ReceiveMessageState,System.DateTime,SuperSocketRRPCServer.RRPCSession,SuperSocketRRPCServer.RRPCSession)">
            <summary>
            任务存储
            </summary>
            <param name="id">任务ID</param>
            <param name="taskInfo">任务信息</param>
            <param name="state">状态</param>
            <param name="expirationTime">过期时间</param>
            <param name="requestClient">请求对象</param>
            <param name="giveClient">转发对象</param>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequest.ForwardingRequestEntity.ProcessingFuncInvoke(SuperSocketRRPCServer.Entity.ReceiveMessageState,System.String)">
            <summary>
            修改结果
            </summary>
            <param name="state">状态</param>
            <param name="rpcResult">结果</param>
        </member>
        <member name="T:SuperSocketRRPCServer.ForwardingRequestQueue">
            <summary>
            请求转发任务管理
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequestQueue.MethodCallQueues">
            <summary>
            执行事件中的方法
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequestQueue.#ctor">
            <summary>
            开启队列管理
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequestQueue.AddTaskQueue(System.Guid,SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation,SuperSocketRRPCServer.RRPCSession,SuperSocketRRPCServer.RRPCSession)">
            <summary>
            添加一个任务到队列并进行发送操作
            </summary>
            <param name="id"></param>
            <param name="info"></param>
            <param name="requestClient"></param>
            <param name="giveClient"></param>
            <returns></returns>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequestQueue.ScheduledCleaningFunc(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            定时清理函数
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequestQueue.GetTaskIDAndSuccess(System.Guid,System.String)">
            <summary>
            根据任务ID获取任务信息并修改状态为以完成
            </summary>
            <param name="id">任务ID</param>
            <param name="rpcResule">内容</param>
            <returns>true 找到并修改信息 false未找到</returns>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequestQueue.ErrorEmpty(System.String)">
            <summary>
            清空所有的任务
            </summary>
            <param name="message">说明</param>
        </member>
        <member name="T:SuperSocketRRPCServer.ForwardingRequestUnity">
            <summary>
            用于转发请求的存储容器
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequestUnity.ForwardingRequestunity">
            <summary>*
            存储的FullName 转发标识列表
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequestUnity.#ctor">
            <summary>
            初始化转发容器
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequestUnity.AddForwardingRequestServer``1(System.Func{System.Collections.Generic.List{SuperSocketRRPCServer.RRPCServer},SuperSocketRRPCServer.RRPCServer},System.Func{System.Collections.Generic.IEnumerable{SuperSocketRRPCServer.RRPCSession},SuperSocketRRPCServer.RRPCSession})">
            <summary>
            添加转发服务规则-某个指定服务
            </summary>
            <typeparam name="IT">待转发请求的接口</typeparam>
            <param name="SelectRRPCServer">选择转发的服务器 不能为空</param>
            <param name="SelectRRPCSession">选择转发session 若为空则从列表中随机选取一个</param>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequestUnity.AddForwardingRequestNamespace(System.String,System.Func{System.Collections.Generic.List{SuperSocketRRPCServer.RRPCServer},SuperSocketRRPCServer.RRPCServer},System.Func{System.Collections.Generic.IEnumerable{SuperSocketRRPCServer.RRPCSession},SuperSocketRRPCServer.RRPCSession})">
            <summary>
            添加转发服务规则-某个命名空间
            </summary>
            <param name="RRPCInterfaceName">远程接口 名称</param>
            <param name="SelectRRPCServer">选择转发的服务器 不能为空</param>
            <param name="SelectRRPCSession">选择转发session 若为空则从列表中随机选取一个</param>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequestUnity.GetService(SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation,System.Collections.Generic.List{SuperSocketRRPCServer.RRPCServer},SuperSocketRRPCServer.RRPCSession@)">
            <summary>
            查询转发的请求
            </summary>
            <param name="info">请求信息</param>
            <param name="session">查询到的session</param>
            <param name="RRPCServers">服务列表</param>
            <returns></returns>
        </member>
        <member name="M:SuperSocketRRPCServer.ForwardingRequestUnity.SelectSession(SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation,SuperSocketRRPCServer.RRPCServer,System.Collections.Generic.IEnumerable{SuperSocketRRPCServer.RRPCSession},SuperSocketRRPCServer.ForwardingRequestEnity,System.Int32,SuperSocketRRPCServer.RRPCSession@)">
            <summary>
            选择Session
            </summary>
            <param name="sessions">Session列表</param>
            <param name="info">请求信息</param>
            <param name="server">选中的Server服务</param>
            <param name="session">匹配到的Session</param>
            <param name="value">保存的配置</param>
            <param name="state">0:优先SelectRRPCSession 1：执行指定sessionID选择 2：随机选择 其他：记录日志没有找到合适的session</param>
        </member>
        <member name="T:SuperSocketRRPCServer.ForwardingRequestEnity">
            <summary>
            存储转发请求的标识实体
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequestEnity.ID">
            <summary>
            存储接口标识
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequestEnity.SelectRRPCServer">
            <summary>
            选择RRPCServer函数
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.ForwardingRequestEnity.SelectRRPCSession">
            <summary>
            选择RRPCSession函数
            </summary>
        </member>
        <member name="T:SuperSocketRRPCServer.LoggerAssembly">
            <summary>
            日志组件
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.LoggerAssembly.LoggerList">
            <summary>
            日志列表
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.LoggerAssembly.Log(SuperSocketRRPCServer.RRPCServer,System.String,SuperSocketRRPCServer.LoggerType)">
            <summary>
            打印日志
            </summary>
            <param name="socket">连接 服务器</param>
            <param name="loggerType">日志类型</param>
            <param name="message">信息</param>
        </member>
        <member name="M:SuperSocketRRPCServer.LoggerAssembly.Log(SuperSocketRRPCServer.RRPCSession,System.String,SuperSocketRRPCServer.LoggerType)">
            <summary>
            打印日志session
            </summary>
            <param name="socket">连接session 服务器</param>
            <param name="loggerType">日志类型</param>
            <param name="message">信息</param>
        </member>
        <member name="M:SuperSocketRRPCServer.LoggerAssembly.LogFile(SuperSocket.SocketBase.Logging.ILog,SuperSocketRRPCServer.LoggerInfo)">
            <summary>
            写入到日志文件中
            </summary>
        </member>
        <member name="T:SuperSocketRRPCServer.LoggerType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="F:SuperSocketRRPCServer.LoggerType.Error">
            <summary>
            异常
            </summary>
        </member>
        <member name="F:SuperSocketRRPCServer.LoggerType.Warning">
            <summary>
            警告
            </summary>
        </member>
        <member name="F:SuperSocketRRPCServer.LoggerType.Info">
            <summary>
            信息
            </summary>
        </member>
        <member name="T:SuperSocketRRPCServer.Triggers">
            <summary>
            触发者
            </summary>
        </member>
        <member name="F:SuperSocketRRPCServer.Triggers.Server">
            <summary>
            服务
            </summary>
        </member>
        <member name="F:SuperSocketRRPCServer.Triggers.Session">
            <summary>
            用户
            </summary>
        </member>
        <member name="T:SuperSocketRRPCServer.LoggerInfo">
            <summary>
            日志信息
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.LoggerInfo.LoggerType">
            <summary>
            日志类型
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.LoggerInfo.Triggers">
            <summary>
            触发者
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.LoggerInfo.Message">
            <summary>
            信息
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.LoggerInfo.Time">
            <summary>
            触发时间
            </summary>
        </member>
        <member name="T:SuperSocketRRPCServer.MonitorReceived">
            <summary>
            所有请求的入口
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.MonitorReceived.ExecuteCommand(SuperSocketRRPCServer.RRPCSession,SuperSocketRRPCServer.CommunicationEntity.RequestBaseInfo)">
            <summary>
            执行函数
            </summary>
            <param name="session">连接对象</param>
            <param name="requestInfo">请求信息</param>
        </member>
        <member name="M:SuperSocketRRPCServer.MonitorReceived.ImplementFunc(SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation,SuperSocketRRPCServer.RRPCSession,SuperSocketRRPCServer.CommunicationEntity.RequestBaseInfo)">
            <summary>
            执行RPC的调用
            </summary>
            <param name="info">请求信息</param>
            <param name="session">连接对象</param>
            <param name="requestInfo">请求基础类</param>
        </member>
        <member name="T:SuperSocketRRPCServer.RemoteCallQueue">
            <summary>
            任务队列管理
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RemoteCallQueue.second">
            <summary>
            超时时间
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RemoteCallQueue.MaxRetryCount">
            <summary>
            最大重试次数
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RemoteCallQueue.MethodCallQueues">
            <summary>
            执行事件中的方法
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RemoteCallQueue.#ctor(System.Int32,System.Int32)">
            <summary>
            开启队列管理
            </summary>
            <param name="second">超时时间</param>
            <param name="maxRetryCount">最大重试次数</param>
        </member>
        <member name="M:SuperSocketRRPCServer.RemoteCallQueue.AddTaskQueue(System.Guid,SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation,SuperSocketRRPCServer.RRPCSession)">
            <summary>
            添加一个任务到队列
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RemoteCallQueue.healthExaminationFunc(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            监控检查函数
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RemoteCallQueue.ScheduledCleaningFunc(System.Object,System.Timers.ElapsedEventArgs)">
            <summary>
            定时清理函数
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RemoteCallQueue.RemoteExecutionFuncAsync(SuperSocketRRPCServer.Entity.RemoteCallEntrity)">
            <summary>
            进行远程调用
            </summary>
            <param name="info">通讯的信息</param>
        </member>
        <member name="M:SuperSocketRRPCServer.RemoteCallQueue.RemoteExecutionFunc(SuperSocketRRPCServer.Entity.RemoteCallEntrity)">
            <summary>
            进行远程调用
            </summary>
            <param name="info">通讯的信息</param>
        </member>
        <member name="M:SuperSocketRRPCServer.RemoteCallQueue.GetTaskIDAndSuccess(System.Guid,System.String)">
            <summary>
            根据任务ID获取任务信息并修改状态为以完成
            </summary>
            <param name="id">任务ID</param>
            <param name="rpcResule">内容</param>
            <returns>true 找到并修改信息 false未找到</returns>
        </member>
        <member name="M:SuperSocketRRPCServer.RemoteCallQueue.ErrorEmpty(System.String)">
            <summary>
            清空所有的任务
            </summary>
            <param name="message">说明</param>
        </member>
        <member name="T:SuperSocketRRPCServer.RRPCReceiveFilter">
            <summary>
            基础请求转换器
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCReceiveFilter.#ctor">
            <summary>
            基础请求转换器
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCReceiveFilter.GetBodyLengthFromHeader(System.Byte[],System.Int32,System.Int32)">
            <summary>
            获取Body长度
            </summary>
            <param name="header"></param>
            <param name="offset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCReceiveFilter.ResolveRequestInfo(System.ArraySegment{System.Byte},System.Byte[],System.Int32,System.Int32)">
            <summary>
            转换成最小包装
            </summary>
            <param name="header"></param>
            <param name="bodyBuffer"></param>
            <param name="offset"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="T:SuperSocketRRPCServer.RRPCServer">
            <summary>
            基础服务
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCServer.container">
            <summary>
            容器对象
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCServer.unityContainer">
            <summary>
            unity 容器对象 一般用来存储如 数据库连接对象 工具之类的单例或者工厂
            在RPCsetup中全局唯一 且能在服务中获取到它
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCServer.RRPCServerList">
            <summary>
            所有的ServerList服务
            </summary> 
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCServer.#ctor">
            <summary>
            通过配置文件安装服务从这里启动
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCServer.OnStarted">
            <summary>
            启动
            </summary>
        </member>
        <member name="T:SuperSocketRRPCServer.RRPCSession">
            <summary>
            Session
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCSession.RrpcAppServer">
            <summary>
            连接对象
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCSession.RemoteCallQueue">
            <summary>
            远程任务队列
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCSession.ForwardingRequestQueue">
            <summary>
            请求转发任务队列
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCSession.Identifications">
            <summary>
            标识
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSession.#ctor">
            <summary>
            session
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSession.OnSessionStarted">
            <summary>
            session连接加入
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSession.OnInit">
            <summary>
            初始化
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSession.HandleUnknownRequest(SuperSocketRRPCServer.CommunicationEntity.RequestBaseInfo)">
            <summary>
            未知消息
            </summary>
            <param name="requestInfo"></param>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSession.HandleException(System.Exception)">
            <summary>
            错误信息
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSession.OnSessionClosed(SuperSocket.SocketBase.CloseReason)">
            <summary>
            连接断开
            </summary>
            <param name="reason"></param>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSession.AddIdentification``1(``0,System.String)">
            <summary>
            添加一个标识到session
            </summary>
            <typeparam name="T">标识类型</typeparam>
            <param name="Identification">标识对象</param>
            <param name="name">自定义的key 如果需要存放同种标识类型 你就会需要它</param>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSession.GetIdentification``1(``0@,System.String)">
            <summary>
            获取一个标识
            </summary>
            <typeparam name="T">标识类型</typeparam>
            <param name="identification">标识对象</param>
            <param name="name">自定义key</param>
            <returns></returns>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSession.SendMessage(System.String)">
            <summary>
            发送消息
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:SuperSocketRRPCServer.RRPCSetupEntrance">
            <summary>
            RRPC初始化入口
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCSetupEntrance.Single">
            <summary>
            单例的入口类
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCSetupEntrance.GlobalContainerInjection">
            <summary>
            全局容器对象注入函数
            在此处注入则所有的AppServer都会调用此函数
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCSetupEntrance.WholeUnitys">
            <summary>
            全局服务注入函数
            在此处注入则所有的AppServer都会调用此函数
            </summary>
        </member>
        <member name="P:SuperSocketRRPCServer.RRPCSetupEntrance.ForwardingRequestUnity">
            <summary>
            转发请求规则容器 
            </summary>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSetupEntrance.#ctor(System.Action{Unity.IUnityContainer},System.Action{SuperSocketRRPCUnity.UnityInIt{SuperSocketRRPCServer.RRPCSession,SuperSocketRRPCServer.CommunicationEntity.RequestExecutiveInformation,SuperSocketRRPCServer.CommunicationEntity.RequestBaseInfo}},System.Action{SuperSocketRRPCServer.ForwardingRequestUnity})">
            <summary>
            RRPC初始化入口
            </summary>
            <param name="GlobalContainerInjection">BaseProvideServices 容器对象注入 给所有的APPServer</param>
            <param name="WholeUnitys">提供给远程调用的服务</param>
            <param name="ForwardingRequest">转发服务请求</param>
        </member>
        <member name="M:SuperSocketRRPCServer.RRPCSetupEntrance.SetupAPPServers">
            <summary>
            启动监听服务
            </summary>
        </member>
    </members>
</doc>
